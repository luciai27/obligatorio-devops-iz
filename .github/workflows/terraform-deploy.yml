name: Deploy VotingApp Infra

on:
  push:
    branches:
      - dev
      - test
      - main
  pull_request:
    branches:
      - main
      - test
      - dev

env:
  TF_VERSION: 1.5.7
  AWS_REGION: us-east-1

jobs:
  terraform:
    name: Terraform Deploy
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

        ## Detecta a qué rama se está haciendo push, y establece el nombre del entorno, el valor se guarda en steps.set_env.outputs.env, que luego se usa para apuntar a la carpeta infra/env/dev, infra/env/test, o infra/env/prod.
      - name: Set environment name
        id: set_env
        run: |
          if [[ "${GITHUB_REF##*/}" == "main" ]]; then
            echo "env=prod" >> $GITHUB_OUTPUT
          else
            echo "env=${GITHUB_REF##*/}" >> $GITHUB_OUTPUT
          fi

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ env.AWS_REGION }}

      
        ##    Primero despliega la capa de red común a todos los ambientes: VPC, IGW, etc
      - name: Terraform Init + Apply - Network Layer
        working-directory: infra/network
        run: |
          terraform init -backend-config="bucket=${{secrets.BUCKET_NAME}}" -backend-config="region=${{secrets.AWS_REGION}}" -backend-config="key=voting-app-network.tfstate"
          terraform apply -auto-approve -input=false

        # Obtener valor de key_name desde outputs si querés exportarlo dinámicamente
      - name: Extract SSH Key Name
        id: get_key
        working-directory: infra/network
        run: |
          KEY_NAME=$(terraform output -raw key_name)
          echo "key_name=$KEY_NAME" >> $GITHUB_OUTPUT

        ##    Luego despliega la capa de infraestructura específica del ambiente.
      - name: Terraform Init + Apply - Env Layer
        working-directory: infra/env/${{ steps.set_env.outputs.env }}
        run: |
          terraform init -backend-config="bucket=${{secrets.BUCKET_NAME}}" -backend-config="region=${{secrets.AWS_REGION}}" -backend-config="key=voting-app-${{ steps.set_env.outputs.env }}.tfstate"
          terraform apply -auto-approve -input=false -var-file="terraform.tfvars" \
          -var="key_name=${{ steps.get_key.outputs.key_name }}" 